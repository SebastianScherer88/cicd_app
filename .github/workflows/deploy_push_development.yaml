name: Build and deploy to development GCP project
on:
  push:
    branches:
      - development
env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT }}
  SERVICE: cicd-sample-app
  REGION: us-central1
  
jobs:
  deploy:
    environment: 'development_environment'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    # Configure Workload Identity Federation and generate an access token.
    - id: auth
      name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v0
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    # Setup gcloud CLI
    - name: Set up cloud SDK
      uses: google-github-actions/setup-gcloud@v0

    
    - name: Authorize Docker push
      run: gcloud auth configure-docker
      
    - name: Build Container image
      run: docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }} .
        
    # Run unit tests
    - name: Run unit tests in container
      run: docker run -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }} pytest tests/tests_unit/
        
    # Run integration tests
    - name: Run integration tests in container
      run: docker run -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }} /bin/bash -c "python app/main.py > log.txt 2>&1 & pytest tests/tests_integration/"
      
    # Push Container to registry
    - name: Push Container
      run: docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }}
      
    - name: Deploy to Cloud Run
      run: |-
        gcloud run deploy ${{ env.SERVICE }} \
          --region ${{ env.REGION }} \
          --image gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }} \
          --platform "managed" \
          --quiet \
          --maxScale 10
